# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BasicBackupApp.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import subprocess
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from custom import CustomMessageBox
from os.path import dirname, abspath, join


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setEnabled(True)
        Form.resize(468, 589)
        Form.setMouseTracking(False)
        Form.setStyleSheet("background-color: grey;")

        # platform checker which will be used for QPixmap path
        icon_path = ''
        if sys.platform == "darwin":
            icon_path = "/Applications/Basic Backup.app/Contents/BasicBackup-Icon.png"
        elif sys.platform == "win32":
            icon_path = "Resources/BasicBackup-Icon.png"

        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(10, 0, 451, 441))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(icon_path))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(10, 490, 451, 91))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(73, 161, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.pushButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(36)
        self.pushButton.setFont(font)
        self.pushButton.setMouseTracking(False)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setAutoDefault(False)
        self.pushButton.setDefault(False)
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        # Dev commands here...
        self.pushButton.clicked.connect(self.runBackup)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Basic Backup"))
        self.pushButton.setText(_translate("Form", "Run Backup"))
        self.pushButton.setStyleSheet("background-color: rgb(68,166,230);")
        Form.close()

    # Dev methods here...
    def runBackup(self):
        info = '''
        The following folders will be backed up:
        
         - Desktop
         - Documents
         - Pictures
         '''
        msg = QMessageBox()
        msg.setWindowTitle("Basic Backup")
        msg.setText("Are you sure you want to backup all of your documents to GDrive?")
        msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Ok|QMessageBox.Cancel)
        msg.setDetailedText(info)
        msg.buttonClicked.connect(self.proceed)
        msg.exec()

    def proceed(self, i):
        if i.text() == "OK":
            if sys.platform == "darwin":
                subprocess.Popen(['open', '-a', 'Terminal', '/Applications/Basic Backup.app/Contents/backup'])
            elif sys.platform == "win32":
                script_path = dirname(abspath(__file__))
                backup_file = f'"{join(script_path,"Resources", "backup.exe")}"'
                subprocess.Popen(backup_file)
            CustomMessageBox.showWithTimeout(5, "Your backup will begin shortly...", "Basic Backup")
            Form.close()


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
